<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x86">
      <Configuration>Debug</Configuration>
      <Platform>x86</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x86">
      <Configuration>Release</Configuration>
      <Platform>x86</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{0e94c4dc-027c-4ed8-bccb-4df81f1bfd50}</ProjectGuid>
    <Keyword>Linux</Keyword>
    <RootNamespace>perf</RootNamespace>
    <MinimumVisualStudioVersion>15.0</MinimumVisualStudioVersion>
    <ApplicationType>Linux</ApplicationType>
    <ApplicationTypeRevision>1.0</ApplicationTypeRevision>
    <TargetLinuxPlatform>Generic</TargetLinuxPlatform>
    <LinuxProjectType>{2238F9CD-F817-4ECC-BD14-2524D2669B35}</LinuxProjectType>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x86'" Label="Configuration">
    <UseDebugLibraries>true</UseDebugLibraries>
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <RemoteRootDir>~/projects</RemoteRootDir>
    <RemoteProjectRelDir>item/$(MSBuildProjectName)</RemoteProjectRelDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x86'" Label="Configuration">
    <UseDebugLibraries>false</UseDebugLibraries>
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <RemoteRootDir>~/projects</RemoteRootDir>
    <RemoteProjectRelDir>item/$(MSBuildProjectName)</RemoteProjectRelDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <UseDebugLibraries>true</UseDebugLibraries>
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <RemoteRootDir>~/projects</RemoteRootDir>
    <RemoteProjectRelDir>item/$(MSBuildProjectName)</RemoteProjectRelDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <UseDebugLibraries>false</UseDebugLibraries>
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <RemoteRootDir>~/projects</RemoteRootDir>
    <RemoteProjectRelDir>item/$(MSBuildProjectName)</RemoteProjectRelDir>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings" />
  <ImportGroup Label="Shared" />
  <ImportGroup Label="PropertySheets" />
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <OutDir>$(ProjectDir)..\..\lib\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(ProjectDir)obj\$(ProjectName)\$(Platform)\$(Configuration)\</IntDir>
    <RemoteIntRelDir>$(RemoteProjectRelDir)/obj/$(ProjectName)/$(Platform)/$(Configuration)</RemoteIntRelDir>
    <RemoteOutRelDir>$(RemoteProjectRelDir)/lib/$(Platform)/$(Configuration)</RemoteOutRelDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <OutDir>$(ProjectDir)..\..\lib\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(ProjectDir)obj\$(ProjectName)\$(Platform)\$(Configuration)\</IntDir>
    <RemoteIntRelDir>$(RemoteProjectRelDir)/obj/$(ProjectName)/$(Platform)/$(Configuration)</RemoteIntRelDir>
    <RemoteOutRelDir>$(RemoteProjectRelDir)/lib/$(Platform)/$(Configuration)</RemoteOutRelDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x86'">
    <OutDir>$(ProjectDir)..\..\lib\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(ProjectDir)obj\$(ProjectName)\$(Platform)\$(Configuration)\</IntDir>
    <RemoteIntRelDir>$(RemoteProjectRelDir)/obj/$(ProjectName)/$(Platform)/$(Configuration)</RemoteIntRelDir>
    <RemoteOutRelDir>$(RemoteProjectRelDir)/lib/$(Platform)/$(Configuration)</RemoteOutRelDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x86'">
    <OutDir>$(ProjectDir)..\..\lib\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(ProjectDir)obj\$(ProjectName)\$(Platform)\$(Configuration)\</IntDir>
    <RemoteIntRelDir>$(RemoteProjectRelDir)/obj/$(ProjectName)/$(Platform)/$(Configuration)</RemoteIntRelDir>
    <RemoteOutRelDir>$(RemoteProjectRelDir)/lib/$(Platform)/$(Configuration)</RemoteOutRelDir>
  </PropertyGroup>
  <ItemGroup>
    <ClCompile Include="..\..\src\cpu\cpu.c" />
    <ClCompile Include="..\..\src\disk\disk.c" />
    <ClCompile Include="..\..\src\memory\memory.c" />
    <ClCompile Include="..\..\src\network\network.c" />
    <ClCompile Include="..\..\src\network\route.c" />
    <ClCompile Include="..\..\src\utils\err.c" />
    <ClCompile Include="..\..\src\utils\linklist.c" />
    <ClCompile Include="..\..\src\utils\utils.c" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="..\..\src\cpu\cpu.h" />
    <ClInclude Include="..\..\src\disk\disk.h" />
    <ClInclude Include="..\..\src\memory\memory.h" />
    <ClInclude Include="..\..\src\network\network.h" />
    <ClInclude Include="..\..\src\network\route.h" />
    <ClInclude Include="..\..\src\utils\config.h" />
    <ClInclude Include="..\..\src\utils\err.h" />
    <ClInclude Include="..\..\src\utils\linklist.h" />
    <ClInclude Include="..\..\src\utils\utils.h" />
  </ItemGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>$(ProjectDir)..\..\src\;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <LibraryDependencies>pthread;%(LibraryDependencies)</LibraryDependencies>
    </Link>
    <RemotePostBuildEvent>
      <Command>if [ ! -d $(RemoteProjectDir)include/utils ]; then mkdir -p $(RemoteProjectDir)include/utils; fi; if [ ! -d $(RemoteProjectDir)include/disk ]; then mkdir -p $(RemoteProjectDir)include/disk; fi;  if [ ! -d $(RemoteProjectDir)include/cpu ]; then mkdir -p $(RemoteProjectDir)include/cpu; fi;  if [ ! -d $(RemoteProjectDir)include/memory ]; then mkdir -p $(RemoteProjectDir)include/memory; fi; if [ ! -d $(RemoteProjectDir)include/network ]; then mkdir -p $(RemoteProjectDir)include/network; fi;  \cp -f $(RemoteProjectDir)src/utils/*.h $(RemoteProjectDir)include/utils; \cp -f $(RemoteProjectDir)src/disk/*.h $(RemoteProjectDir)include/disk; \cp -f $(RemoteProjectDir)src/cpu/*.h $(RemoteProjectDir)include/cpu; \cp -f $(RemoteProjectDir)src/network/*.h $(RemoteProjectDir)include/network; \cp -f $(RemoteProjectDir)src/memory/*.h $(RemoteProjectDir)include/memory;</Command>
    </RemotePostBuildEvent>
    <PostBuildEvent>
      <Command>mkdir "$(ProjectDir)"..\..\include\utils
mkdir "$(ProjectDir)"..\..\include\cpu
mkdir "$(ProjectDir)"..\..\include\disk
mkdir "$(ProjectDir)"..\..\include\memory
mkdir "$(ProjectDir)"..\..\include\network
copy $(ProjectDir)..\..\src\utils\*.h "$(ProjectDir)"..\..\include\utils
copy $(ProjectDir)..\..\src\cpu\*.h "$(ProjectDir)"..\..\include\cpu
copy $(ProjectDir)..\..\src\disk\*.h "$(ProjectDir)"..\..\include\disk
copy $(ProjectDir)..\..\src\memory\*.h "$(ProjectDir)"..\..\include\memory
copy $(ProjectDir)..\..\src\network\*.h "$(ProjectDir)"..\..\include\network</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>$(ProjectDir)..\..\src\;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <LibraryDependencies>pthread;%(LibraryDependencies)</LibraryDependencies>
    </Link>
    <RemotePostBuildEvent>
      <Command>if [ ! -d $(RemoteProjectDir)include/utils ]; then mkdir -p $(RemoteProjectDir)include/utils; fi; if [ ! -d $(RemoteProjectDir)include/disk ]; then mkdir -p $(RemoteProjectDir)include/disk; fi;  if [ ! -d $(RemoteProjectDir)include/cpu ]; then mkdir -p $(RemoteProjectDir)include/cpu; fi;  if [ ! -d $(RemoteProjectDir)include/memory ]; then mkdir -p $(RemoteProjectDir)include/memory; fi; if [ ! -d $(RemoteProjectDir)include/network ]; then mkdir -p $(RemoteProjectDir)include/network; fi;  \cp -f $(RemoteProjectDir)src/utils/*.h $(RemoteProjectDir)include/utils; \cp -f $(RemoteProjectDir)src/disk/*.h $(RemoteProjectDir)include/disk; \cp -f $(RemoteProjectDir)src/cpu/*.h $(RemoteProjectDir)include/cpu; \cp -f $(RemoteProjectDir)src/network/*.h $(RemoteProjectDir)include/network; \cp -f $(RemoteProjectDir)src/memory/*.h $(RemoteProjectDir)include/memory;</Command>
    </RemotePostBuildEvent>
    <PostBuildEvent>
      <Command>mkdir "$(ProjectDir)"..\..\include\utils
mkdir "$(ProjectDir)"..\..\include\cpu
mkdir "$(ProjectDir)"..\..\include\disk
mkdir "$(ProjectDir)"..\..\include\memory
mkdir "$(ProjectDir)"..\..\include\network
copy $(ProjectDir)..\..\src\utils\*.h "$(ProjectDir)"..\..\include\utils
copy $(ProjectDir)..\..\src\cpu\*.h "$(ProjectDir)"..\..\include\cpu
copy $(ProjectDir)..\..\src\disk\*.h "$(ProjectDir)"..\..\include\disk
copy $(ProjectDir)..\..\src\memory\*.h "$(ProjectDir)"..\..\include\memory
copy $(ProjectDir)..\..\src\network\*.h "$(ProjectDir)"..\..\include\network</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x86'">
    <ClCompile>
      <AdditionalIncludeDirectories>$(ProjectDir)..\..\src\;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <LibraryDependencies>pthread;%(LibraryDependencies)</LibraryDependencies>
    </Link>
    <RemotePostBuildEvent>
      <Command>if [ ! -d $(RemoteProjectDir)include/utils ]; then mkdir -p $(RemoteProjectDir)include/utils; fi; if [ ! -d $(RemoteProjectDir)include/disk ]; then mkdir -p $(RemoteProjectDir)include/disk; fi;  if [ ! -d $(RemoteProjectDir)include/cpu ]; then mkdir -p $(RemoteProjectDir)include/cpu; fi;  if [ ! -d $(RemoteProjectDir)include/memory ]; then mkdir -p $(RemoteProjectDir)include/memory; fi; if [ ! -d $(RemoteProjectDir)include/network ]; then mkdir -p $(RemoteProjectDir)include/network; fi;  \cp -f $(RemoteProjectDir)src/utils/*.h $(RemoteProjectDir)include/utils; \cp -f $(RemoteProjectDir)src/disk/*.h $(RemoteProjectDir)include/disk; \cp -f $(RemoteProjectDir)src/cpu/*.h $(RemoteProjectDir)include/cpu; \cp -f $(RemoteProjectDir)src/network/*.h $(RemoteProjectDir)include/network; \cp -f $(RemoteProjectDir)src/memory/*.h $(RemoteProjectDir)include/memory;</Command>
    </RemotePostBuildEvent>
    <PostBuildEvent>
      <Command>mkdir "$(ProjectDir)"..\..\include\utils
mkdir "$(ProjectDir)"..\..\include\cpu
mkdir "$(ProjectDir)"..\..\include\disk
mkdir "$(ProjectDir)"..\..\include\memory
mkdir "$(ProjectDir)"..\..\include\network
copy $(ProjectDir)..\..\src\utils\*.h "$(ProjectDir)"..\..\include\utils
copy $(ProjectDir)..\..\src\cpu\*.h "$(ProjectDir)"..\..\include\cpu
copy $(ProjectDir)..\..\src\disk\*.h "$(ProjectDir)"..\..\include\disk
copy $(ProjectDir)..\..\src\memory\*.h "$(ProjectDir)"..\..\include\memory
copy $(ProjectDir)..\..\src\network\*.h "$(ProjectDir)"..\..\include\network</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x86'">
    <ClCompile>
      <AdditionalIncludeDirectories>$(ProjectDir)..\..\src\;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <LibraryDependencies>pthread;%(LibraryDependencies)</LibraryDependencies>
    </Link>
    <RemotePostBuildEvent>
      <Command>if [ ! -d $(RemoteProjectDir)include/utils ]; then mkdir -p $(RemoteProjectDir)include/utils; fi; if [ ! -d $(RemoteProjectDir)include/disk ]; then mkdir -p $(RemoteProjectDir)include/disk; fi;  if [ ! -d $(RemoteProjectDir)include/cpu ]; then mkdir -p $(RemoteProjectDir)include/cpu; fi;  if [ ! -d $(RemoteProjectDir)include/memory ]; then mkdir -p $(RemoteProjectDir)include/memory; fi; if [ ! -d $(RemoteProjectDir)include/network ]; then mkdir -p $(RemoteProjectDir)include/network; fi;  \cp -f $(RemoteProjectDir)src/utils/*.h $(RemoteProjectDir)include/utils; \cp -f $(RemoteProjectDir)src/disk/*.h $(RemoteProjectDir)include/disk; \cp -f $(RemoteProjectDir)src/cpu/*.h $(RemoteProjectDir)include/cpu; \cp -f $(RemoteProjectDir)src/network/*.h $(RemoteProjectDir)include/network; \cp -f $(RemoteProjectDir)src/memory/*.h $(RemoteProjectDir)include/memory;</Command>
    </RemotePostBuildEvent>
    <PostBuildEvent>
      <Command>mkdir "$(ProjectDir)"..\..\include\utils
mkdir "$(ProjectDir)"..\..\include\cpu
mkdir "$(ProjectDir)"..\..\include\disk
mkdir "$(ProjectDir)"..\..\include\memory
mkdir "$(ProjectDir)"..\..\include\network
copy $(ProjectDir)..\..\src\utils\*.h "$(ProjectDir)"..\..\include\utils
copy $(ProjectDir)..\..\src\cpu\*.h "$(ProjectDir)"..\..\include\cpu
copy $(ProjectDir)..\..\src\disk\*.h "$(ProjectDir)"..\..\include\disk
copy $(ProjectDir)..\..\src\memory\*.h "$(ProjectDir)"..\..\include\memory
copy $(ProjectDir)..\..\src\network\*.h "$(ProjectDir)"..\..\include\network</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets" />
</Project>